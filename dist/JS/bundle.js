function validateInput(e){e.addEventListener("input",()=>""!==e)}function validateEmail(e){e.addEventListener("input",()=>-1!==e.indexOf("@"))}function validateCheckbox(e){return!1!==e.checked}document.addEventListener("DOMContentLoaded",function(){const t=document.querySelector(".header__burger");var e=document.querySelectorAll(".header__menu-item");const o=document.querySelector(".header__menu"),c=document.querySelector(".cookies-alert");var r=document.querySelector(".cookies-alert__btn");if(document.querySelector(".access__form")){var l=document.querySelector(".access__form");const a=l.querySelectorAll(".input-value"),n=l.querySelector("[type='email']"),d=l.querySelectorAll("[type='checkbox']"),i=l.querySelector("[type='submit']");i.classList.add("disabled"),l.addEventListener("change",()=>{console.log(validateCheckbox(d[0])),validateInput(a[0])&&validateInput(a[1])&&validateInput(a[2])&&validateInput(a[3])&&validateInput(a[4])&&validateEmail(n)&&validateCheckbox(d[0])&&validateCheckbox(d[1])?i.classList.remove("disabled"):i.classList.add("disabled")})}if(t.addEventListener("click",()=>{t.classList.toggle("active"),o.classList.toggle("active")}),e.forEach(e=>{e.addEventListener("click",()=>{t.classList.toggle("active"),o.classList.toggle("active")})}),document.cookie.indexOf("cookieOn")<0&&c.classList.add("active"),r.addEventListener("click",()=>{c.classList.remove("active"),document.cookie="cookieOn=true"}),document.querySelector(".recovery")){l=document.querySelector(".recovery");const s=l.querySelector("[type='email']"),u=l.querySelector("[name='agreePersonal']"),m=l.querySelector("[type='submit'");m.disabled=!0,l.querySelectorAll("input").forEach(e=>{e.addEventListener("change",()=>{-1!=s.value.indexOf("@")&&0!=u.checked?m.disabled=!1:m.disabled=!0})}),l.addEventListener("submit",e=>{document.querySelector("#formRecoveryNotAgree").style.display="none",document.querySelector("#formRecoveryEmailWrong").style.display="none",e.preventDefault(),s.value.indexOf("@")<=0&&(console.log("ok"),document.querySelector("#formRecoveryEmailWrong").style.display="block"),!1===u.checked&&(document.querySelector("#formRecoveryNotAgree").style.display="block")})}document.querySelector(".questions__form")&&document.querySelector(".questions__form-clear").addEventListener("click",()=>{document.querySelector(".questions__form").reset()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
